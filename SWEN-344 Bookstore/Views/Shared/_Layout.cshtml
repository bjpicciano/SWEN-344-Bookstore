<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <nav class="navbar navbar-default navbar-fixed-top">
        <div class="container-fluid">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/Home/Catalog">Bookstore</a>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav navbar-right">
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Username<span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a href="/Home/ShoppingCart">Shopping Cart</a></li>
                            <li><a href="/Home/Messages">Messages</a></li>
                            <li><a href="/Home/Reciepts">Reciepts</a></li>
                            <li role="separator" class="divider"></li>
                            <li><a href="#" onclick="auth2.signOut()">Log out</a></li>
                        </ul>
                    </li>
                </ul>
            </div><!-- /.navbar-collapse -->
        </div><!-- /.container-fluid -->
    </nav>

    <div class="container body-content">
        @RenderBody()
        <div id="gConnect" class="login" style="display:none">
            <h3>Oh no, you're not logged in!</h3>
            <div id="signin-button"></div>
        </div>
        <hr />
        <footer>
            <br />
            <p>&copy; @DateTime.Now.Year - SWEN 344 Bookstore</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)



    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
    <meta name="google-signin-client_id" content="876131665863-pgdcfjbe1efijpq6g3ho8ggj5rqh35af.apps.googleusercontent.com">
    

        <script type="application/javascript">
            var auth2 = {};
            var helper = (function() {
                return {
                    /**
                     * Hides the sign in button and starts the post-authorization operations.
                     *
                     * {Object} authResult An Object which contains the access token and
                     *   other authentication information.
                     */
                    onSignInCallback: function(authResult) {
                        if (authResult.isSignedIn.get()) {
                            var access_token = authResult.currentUser.get().getAuthResponse().access_token;
                            console.log("access_token: " + access_token);
                            var id_token = authResult.currentUser.get().getAuthResponse().id_token;
                            console.log("id_token: " + id_token);
                            $('.logged').show();

                            $('.login').hide();
                            helper.profile(access_token);
                        }
                        else {
                            if (authResult['error'] || authResult.currentUser.get().getAuthResponse() == null) {
                                // There was an error, which means the user is not signed in.
                                // As an example, you can handle by writing to the console:
                                console.log('There was an error: ' + authResult['error']);
                            }
                            $('#authResult').append('Logged out');
                            $('.logged').hide();

                            $('.login').show();
                        }
                    },
                    /**
                     * Gets and renders the currently signed in user's profile data.
                     */
                    profile: function(access_token){
                        gapi.client.plus.people.get({
                            'userId': 'me'
                        }).then(function(res) {
                            var profile = res.result;
                            $('#profile').empty();
                            $('#profile').append(
                                    $('<button onclick="getUserInfoFromToken(\''+access_token+'\')">GetToken</button>'));
                            $('#profile').append(
                                    $('<p><img src=\"' + profile.image.url + '\"></p>'));
                            $('#profile').append(
                                    $('<p><em>Name: </em>' + profile.displayName + '<br /><em>Tagline: </em>' +
                                            profile.tagline + '</p>'));
                            if (profile.emails) {
                                $('#profile').append('Emails: ');
                                for (var i=0; i < profile.emails.length; i++){
                                    $('#profile').append(profile.emails[i].value).append(' ');
                                }
                                $('#profile').append('<br/>');
                            }
                            if (profile.cover && profile.coverPhoto) {
                                $('#profile').append(
                                        $('<p><img src=\"' + profile.cover.coverPhoto.url + '\"></p>'));
                            }
                        }, function(err) {
                            var error = err.result;
                            $('#profile').empty();
                            $('#profile').append(error.message);
                        });
                    }
                };
            })();
            /**
             * jQuery initialization
             */
            $(document).ready(function() {
                $('#loaderror').hide();
                if ($('meta')[0].content == 'YOUR CLIENT ID HERE') {
                    alert('This sample requires your OAuth credentials (client ID) ' +
                            'from the Google APIs console:\n' +
                            '    https://code.google.com/apis/console/#:access\n\n' +
                            'Find and replace YOUR_CLIENT_ID with your client ID.'
                    );
                }
            });
            /**
             * Handler for when the sign-in state changes.
             *
             *{boolean} isSignedIn The new signed in state.
             */
            var updateSignIn = function() {
                console.log('update sign in state');
                if (auth2.isSignedIn.get()) {
                    helper.onSignInCallback(gapi.auth2.getAuthInstance());
                }
                else{
                    helper.onSignInCallback(gapi.auth2.getAuthInstance());
                }
            };
            function getUserInfoFromToken(accessToken){
                $.ajax({
                    url:'https://www.googleapis.com/oauth2/v3/tokeninfo',
                    type:'POST',
                    data:'access_token='+accessToken,
                    success: function(msg){
                        var expireTime = msg['expires_in'];
                        var scope = msg['scope'];
                        console.log(msg);
                        alert("Session expires in: " + expireTime
                                //+"\nUser Id: " + userId       //only works if you have granted this session "profile" under scope
                                +"\nGranted Scope: " + scope
                        );
                    }
                })
            }
            /**
             * This method sets up the sign-in listener after the client library loads.
             */
            function startApp() {
                gapi.load('auth2', function() {
                    gapi.client.load('plus','v1').then(function() {
                        gapi.signin2.render('signin-button', {scope: 'profile', fetch_basic_profile: false });
                        gapi.auth2.init({fetch_basic_profile: false, scope:'profile'})
                                .then(function (){
                                    console.log('init');
                                    auth2 = gapi.auth2.getAuthInstance();
                                    auth2.isSignedIn.listen(updateSignIn);
                                    auth2.then(updateSignIn);
                                });
                    });
                });
            }
        </script>
        <script src="https://apis.google.com/js/client:platform.js?onload=startApp"></script>
        
    </body>
</html>
